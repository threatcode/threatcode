#!/bin/bash
#

{%- set VERSION = salt['pillar.get']('global:soversion', '') %}
{%- set IMAGEREPO = salt['pillar.get']('global:imagerepo') %}
{%- set MANAGER = salt['grains.get']('master') %}
. /usr/sbin/tc-common

# Exit on errors, since all lines must succeed
set -e

# Check to see if we have extracted the ca cert.
if [ ! -f /opt/tc/saltstack/local/salt/common/cacerts ]; then
    docker run -v /etc/pki/ca.crt:/etc/ssl/ca.crt --name tc-elasticsearchca --user root --entrypoint jdk/bin/keytool {{ MANAGER }}:5000/{{ IMAGEREPO }}/tc-elasticsearch:{{ VERSION }} -keystore /usr/share/elasticsearch/jdk/lib/security/cacerts -alias SOSCA -import -file /etc/ssl/ca.crt -storepass changeit -noprompt
    docker cp tc-elasticsearchca:/usr/share/elasticsearch/jdk/lib/security/cacerts /opt/tc/saltstack/local/salt/common/cacerts
    docker cp tc-elasticsearchca:/etc/ssl/certs/ca-certificates.crt /opt/tc/saltstack/local/salt/common/tls-ca-bundle.pem
    docker rm tc-elasticsearchca
    echo "" >> /opt/tc/saltstack/local/salt/common/tls-ca-bundle.pem
    echo "sosca" >> /opt/tc/saltstack/local/salt/common/tls-ca-bundle.pem
    cat /etc/pki/ca.crt >> /opt/tc/saltstack/local/salt/common/tls-ca-bundle.pem
else
    exit 0
fi
